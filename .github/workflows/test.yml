name: 单元测试

on:
  workflow_dispatch:
    inputs:
      unity_versions:
        description: "输入引擎版本（参考：https://unity.com/releases/editor/archive）"
        required: false
        type: string
        default: '["2021.3.30f1", "2022.3.62f2", "6000.2.7f2"]'
      test_modes:
        description: "输入测试模式（可选：EditMode/PlayMode）"
        required: false
        type: string
        default: '["PlayMode"]'
  workflow_call:
    secrets:
      UNITY_LICENSE:
        required: true
      UNITY_EMAIL:
        required: true
      UNITY_PASSWORD:
        required: true
    inputs:
      unity_versions:
        description: "输入引擎版本（参考：https://unity.com/releases/editor/archive）"
        required: false
        type: string
        default: '["2021.3.30f1", "2022.3.62f2", "6000.2.7f2"]'
      test_modes:
        description: "输入测试模式（可选：EditMode/PlayMode）"
        required: false
        type: string
        default: '["PlayMode"]'

permissions:
  checks: write
  contents: read
  actions: read
  security-events: write

jobs:
  test:
    name: 测试 Unity${{ matrix.unityVersion }}.${{ matrix.testMode }} 环境
    runs-on: ubuntu-latest
    env:
      TZ: "Asia/Shanghai"
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - Package/Samples~
        unityVersion: ${{ fromJson(github.event.inputs.unity_versions || inputs.unity_versions) }}
        testMode: ${{ fromJson(github.event.inputs.test_modes || inputs.test_modes) }}
    outputs:
      passed: ${{ steps.tests.conclusion == 'success' }}

    steps:
      - name: 检出项目仓库
        uses: actions/checkout@v4
        with:
          lfs: true
          path: Package

      - name: 检出项目缓存
        uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ runner.os }}-${{ hashFiles('**/ProjectSettings/ProjectVersion.txt') }}
          restore-keys: |
            Library-${{ runner.os }}-

      - name: 运行单元测试
        uses: game-ci/unity-test-runner@v4
        id: tests
        env:
          TZ: "Asia/Shanghai"
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: Results
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: 测试 Unity${{ matrix.unityVersion }}.${{ matrix.testMode }} 报告

      - name: 上传测试报告
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Test#${{ github.run_number }}.Unity${{ matrix.unityVersion }}.${{ matrix.testMode }}.Reports
          path: ${{ steps.tests.outputs.artifactsPath }}
          retention-days: 14
